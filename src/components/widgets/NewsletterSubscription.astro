---
import { twMerge } from 'tailwind-merge';

export interface Props {
  title?: string;
  subtitle?: string;
  tagline?: string;
  subscriberCount?: string;
  reviewCount?: string;
  inputPlaceholder?: string;
  submitText?: string;
  disclaimer?: string;
  privacyPolicyLink?: string;
  privacyPolicyText?: string;
  classes?: Record<string, string>;
  accentColor?: string;
  accentColorDark?: string;
  showReviews?: boolean;
  showSubscriberCount?: boolean;
}

const {
  title = 'LifeNotes',
  subtitle = 'Subscribe to',
  tagline = 'I share actionable productivity tips, practical life advice, and high-quality insights from across the web, directly to your inbox.',
  subscriberCount = '260,000 friendly readers',
  reviewCount = '200+ reviews',
  inputPlaceholder = 'Enter your email address',
  submitText = 'Subscribe',
  disclaimer = "By submitting this form, you'll be signed up to my free newsletter. I may also send you other emails about my courses. You can opt-out at any time. For more information, see our",
  privacyPolicyLink = '#',
  privacyPolicyText = 'privacy policy',
  classes = {},
  accentColor = '#7A4EFF',
  accentColorDark = '#9370FF',
  showReviews = true,
  showSubscriberCount = true,
} = Astro.props;

const {
  container: containerClass = '',
  title: titleClass = '',
  subtitle: subtitleClass = '',
  tagline: taglineClass = '',
  form: formClass = '',
} = classes;
---

<!-- Newsletter Subscription Widget ************** -->
<section class={twMerge('py-16 bg-gray-50 dark:bg-slate-800 relative overflow-hidden', containerClass)}>
  <div class="absolute right-0 top-0 h-full w-1/2 opacity-10">
    <svg
      width="100%"
      height="100%"
      viewBox="0 0 400 400"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      class="text-primary-500"
    >
      <path d="M399 1C237.5 1 1 237.5 1 399" stroke="currentColor" stroke-width="2"></path>
      <path d="M399 100C292.5 100 100 292.5 100 399" stroke="currentColor" stroke-width="2"></path>
      <path d="M399 200C347.5 200 200 347.5 200 399" stroke="currentColor" stroke-width="2"></path>
      <path d="M399 300C402.5 300 300 402.5 300 399" stroke="currentColor" stroke-width="2"></path>
    </svg>
  </div>

  <div class="max-w-4xl mx-auto px-4 sm:px-6 relative">
    <div class="flex flex-col md:flex-row items-center justify-between gap-12">
      <div class="md:w-1/2">
        <div class="mb-4">
          <div class="inline-flex items-center">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class={`h-10 w-10 text-[${accentColor}] dark:text-[${accentColorDark}] mr-2`}
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
            >
              <path d="M21 5L2 12l19 7-7-7 7-7z"></path>
            </svg>
            <h3 class={twMerge('text-2xl font-bold tracking-tight dark:text-white', subtitleClass)}>{subtitle}</h3>
          </div>
          <h2 class={twMerge('text-4xl md:text-5xl font-bold tracking-tight dark:text-white mt-1', titleClass)}>
            {title}
          </h2>
        </div>
        <p class={twMerge('text-gray-600 dark:text-gray-400 text-lg mb-6', taglineClass)}>
          {tagline}
        </p>
        {
          showSubscriberCount && (
            <p class="text-sm text-gray-500 dark:text-gray-400 mt-4">
              Join a growing community of more than <span class="font-semibold">{subscriberCount}</span>.
            </p>
          )
        }

        {
          showReviews && (
            <div class="flex items-center mt-4">
              <div class="flex -space-x-2">
                <img
                  class="w-8 h-8 rounded-full border-2 border-white dark:border-slate-800"
                  src="https://randomuser.me/api/portraits/men/1.jpg"
                  alt="User avatar"
                />
                <img
                  class="w-8 h-8 rounded-full border-2 border-white dark:border-slate-800"
                  src="https://randomuser.me/api/portraits/women/2.jpg"
                  alt="User avatar"
                />
                <img
                  class="w-8 h-8 rounded-full border-2 border-white dark:border-slate-800"
                  src="https://randomuser.me/api/portraits/men/3.jpg"
                  alt="User avatar"
                />
              </div>
              <div class="flex items-center ml-2">
                <div class="flex text-amber-400">
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-4 h-4">
                    <path
                      fill-rule="evenodd"
                      d="M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.007 5.404.433c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.433 2.082-5.006z"
                      clip-rule="evenodd"
                    />
                  </svg>
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-4 h-4">
                    <path
                      fill-rule="evenodd"
                      d="M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.007 5.404.433c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.433 2.082-5.006z"
                      clip-rule="evenodd"
                    />
                  </svg>
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-4 h-4">
                    <path
                      fill-rule="evenodd"
                      d="M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.007 5.404.433c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.433 2.082-5.006z"
                      clip-rule="evenodd"
                    />
                  </svg>
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-4 h-4">
                    <path
                      fill-rule="evenodd"
                      d="M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.007 5.404.433c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.433 2.082-5.006z"
                      clip-rule="evenodd"
                    />
                  </svg>
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-4 h-4">
                    <path
                      fill-rule="evenodd"
                      d="M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.007 5.404.433c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.433 2.082-5.006z"
                      clip-rule="evenodd"
                    />
                  </svg>
                </div>
                <span class="ml-1 text-sm text-gray-500 dark:text-gray-400">{reviewCount}</span>
              </div>
            </div>
          )
        }
      </div>

      <div class="md:w-1/2">
        <div
          class={twMerge(
            'bg-white dark:bg-slate-900 p-8 rounded-2xl shadow-lg border border-gray-100 dark:border-gray-700 relative',
            formClass
          )}
        >
          <div
            class="absolute -top-4 -right-4 bg-primary-50 dark:bg-primary-900/20 w-20 h-20 rounded-full flex items-center justify-center"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class={`h-10 w-10 text-[${accentColor}] dark:text-[${accentColorDark}] transform rotate-45`}
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
            >
              <path d="M21 5L2 12l19 7-7-7 7-7z"></path>
            </svg>
          </div>

          <form id="newsletter-form" class="space-y-4">
            <div>
              <label for="newsletter-email" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1"
                >Your email</label
              >
              <input
                type="email"
                id="newsletter-email"
                name="email"
                class="w-full px-4 py-3.5 border border-gray-300 dark:border-gray-700 rounded-xl focus:ring-primary-500 focus:border-primary-500 dark:bg-slate-800 transition-all duration-200"
                placeholder={inputPlaceholder}
                required
              />
            </div>

            <div>
              <button
                type="submit"
                id="newsletter-submit"
                class={`w-full bg-[${accentColor}] hover:bg-[${accentColorDark}] text-white font-medium py-3.5 px-6 rounded-xl transition duration-300 ease-in-out transform hover:scale-[1.02] hover:shadow-md`}
              >
                {submitText}
              </button>
            </div>

            <div id="form-status" class="text-center mt-4 hidden">
              <p id="success-message" class="text-green-600 dark:text-green-400 hidden">Thanks for subscribing!</p>
              <p id="error-message" class="text-red-600 dark:text-red-400 hidden">
                Something went wrong. Please try again.
              </p>
            </div>
          </form>

          <div class="flex items-center justify-center mt-6">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-5 w-5 text-gray-400 mr-2"
              viewBox="0 0 20 20"
              fill="currentColor"
            >
              <path
                fill-rule="evenodd"
                d="M10 2a8 8 0 100 16 8 8 0 000-16zm0 15a7 7 0 100-14 7 7 0 000 14z"
                clip-rule="evenodd"></path>
              <path
                fill-rule="evenodd"
                d="M10 5.5a.5.5 0 01.5.5v4.5H14a.5.5 0 010 1h-4a.5.5 0 01-.5-.5V6a.5.5 0 01.5-.5z"
                clip-rule="evenodd"></path>
            </svg>
            <p class="text-sm text-gray-500 dark:text-gray-400">
              {disclaimer}
              <a href={privacyPolicyLink} class="text-primary-600 hover:underline dark:text-primary-400"
                >{privacyPolicyText}</a
              >.
            </p>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('newsletter-form') as HTMLFormElement;
    const emailInput = document.getElementById('newsletter-email') as HTMLInputElement;
    const submitButton = document.getElementById('newsletter-submit') as HTMLButtonElement;
    const formStatus = document.getElementById('form-status');
    const successMessage = document.getElementById('success-message');
    const errorMessage = document.getElementById('error-message');

    if (form) {
      form.addEventListener('submit', async (e) => {
        e.preventDefault();

        // Disable the submit button and show loading state
        if (submitButton) {
          submitButton.disabled = true;
          submitButton.textContent = 'Subscribing...';
        }

        try {
          const email = emailInput?.value;

          if (!email) {
            throw new Error('Email is required');
          }

          console.log('Submitting email:', email);

          const response = await fetch('/api/subscribe', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ email }),
          });

          console.log('Response status:', response.status);

          let data;
          try {
            data = await response.json();
            console.log('Response data:', data);
          } catch (jsonError) {
            console.error('Error parsing JSON response:', jsonError);
            throw new Error('Invalid response from server');
          }

          if (formStatus) formStatus.classList.remove('hidden');

          if (response.ok) {
            // Show success message
            if (successMessage) successMessage.classList.remove('hidden');
            if (errorMessage) errorMessage.classList.add('hidden');

            // Clear the form
            if (form) form.reset();
          } else {
            // Show error message
            if (errorMessage) {
              errorMessage.textContent = data?.message || 'Something went wrong. Please try again.';
              errorMessage.classList.remove('hidden');
            }
            if (successMessage) successMessage.classList.add('hidden');
          }
        } catch (error) {
          console.error('Error:', error);

          // Show error message
          if (formStatus) formStatus.classList.remove('hidden');
          if (errorMessage) {
            errorMessage.textContent =
              error instanceof Error ? error.message : 'Something went wrong. Please try again.';
            errorMessage.classList.remove('hidden');
          }
          if (successMessage) successMessage.classList.add('hidden');
        } finally {
          // Re-enable the submit button
          if (submitButton) {
            submitButton.disabled = false;
            submitButton.textContent = 'Subscribe';
          }
        }
      });
    }
  });
</script>
